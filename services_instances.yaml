#heat_template_version: 2013-05-23
heat_template_version: 2016-04-08

description: Simple template to deploy a single compute instance


parameters:
  stack_name:
    type: string
    label: stack_name 
    description: Name of the stack
    default: basic
  instance_count:
    type: string
    label: instance_count
    description: Number of instance 
    default: 2
  flavor:
    type: string
    label: flavor
    description: Type of instance (flavor) 
    default: 1 GB Performance
  image:
    type: string
    label: image
    description: Type of instance (flavor) 
    default: Ubuntu 16.04 LTS (Xenial Xerus) (PVHVM)
  ssh_key:
    type: string
    label: ssh_key
    description: The ssh key for admin connections
    default: ssh-key
  private_network:
    type: string
    label: Public network name or ID
    description: Public network with floating IP addresses.
    default: private
  volume_size:
    type: number
    description: Size of the volume to be created.
    default: 3
    constraints:
      - range: { min: 1, max: 1024 }
        description: must be between 1 and 1024 Gb.


resources:
  docker_registry_instances:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: instance_count }
      resource_def:
        type: OS::Nova::Server
        properties:
          # create a unique name for each server
          # using its index in the group
          name: 
            str_replace:
              template: stack%_serviceInstanceDockerReg_%index%
              params:
                "stack%": { get_param: stack_name }
          image: { get_param: image }
          flavor: { get_param: flavor }
          key_name: { get_param: ssh_key }
          user_data_format: RAW
          user_data:
              str_replace:
                template: |
                  #!/bin/bash -v
                  touch 1
                  set -e
                  set -u
                  cd /root
                  touch 2
                  error() {
                    wc_notify --data-binary '{"status": "FAILURE"}'
                    exit 1
                  }
                  touch 3
                  trap 'error' ERR
                  touch 4
                  ufw default deny
                  ufw allow ssh
                  ufw allow 5000
                  ufw --force enable
                  touch 5
                  apt-get update
                  touch 6
                  DEBIAN_FRONTEND=noninteractive apt-get install -y unattended-upgrades
                  touch 7
                  DEBIAN_FRONTEND=noninteractive apt-get upgrade -y -q
                  touch 8
                  DEBIAN_FRONTEND=noninteractive RUNLEVEL=1 apt-get install -y -q --assume-yes docker.io python python-pip
                  touch 9
                  pip install docker-compose
                  touch 10
                  wget https://raw.githubusercontent.com/bboortz/kubernetes/master/docker_registry/docker-compose.yml
                  touch 11
                  service docker restart
                  service 12
                  docker-compose up -d
                  touch 13
                  wc_notify --data-binary '{"status": "SUCCESS"}
                params:
                  $param: { get_param: instance_count }

  consul_instances:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: instance_count }
      resource_def:
        type: OS::Nova::Server
        properties:
          # create a unique name for each server
          # using its index in the group
          name: 
            str_replace:
              template: stack%_serviceInstanceConsul_%index%
              params:
                "stack%": { get_param: stack_name }
          image: { get_param: image }
          flavor: { get_param: flavor }
          key_name: { get_param: ssh_key }
          user_data_format: RAW
          user_data:
              str_replace:
                template: |
                  #!/bin/bash -v
                  touch 1
                  set -e
                  set -u
                  cd /root
                  touch 2
                  error() {
                    wc_notify --data-binary '{"status": "FAILURE"}'
                    exit 1
                  }
                  touch 3
                  trap 'error' ERR
                  touch 4
                  ufw default deny
                  ufw allow ssh
                  ufw allow 5000
                  ufw --force enable
                  touch 5
                  apt-get update
                  touch 6
                  DEBIAN_FRONTEND=noninteractive apt-get install -y unattended-upgrades
                  touch 7
                  DEBIAN_FRONTEND=noninteractive apt-get upgrade -y -q
                  touch 8
                  DEBIAN_FRONTEND=noninteractive RUNLEVEL=1 apt-get install -y -q --assume-yes docker.io python python-pip
                  touch 9
                  pip install docker-compose
                  touch 10
                  wget https://raw.githubusercontent.com/bboortz/kubernetes/master/consul/docker-compose.yml
                  touch 11
                  service docker restart
                  service 12
                  docker-compose up -d
                  touch 13
                  wc_notify --data-binary '{"status": "SUCCESS"}
                params:
                  $param: { get_param: instance_count }


